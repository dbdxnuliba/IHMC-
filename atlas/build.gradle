plugins {
   id("us.ihmc.ihmc-build") version "0.16.5"
   id("us.ihmc.ihmc-ci") version "4.25"
   id("us.ihmc.ihmc-cd") version "0.1"
   id("us.ihmc.scs") version "0.4"
   id("us.ihmc.log-tools") version "0.3.1"
   id("org.hidetake.ssh") version "2.9.0"
   id "application"
}

ihmc {
   loadProductProperties("../product.properties")
   
   configureDependencyResolution()
   configurePublications()
}

mainDependencies {
   compile group: "org.georegression", name: "georegression", version: "0.11"
   compile group: "org.ddogleg", name: "ddogleg", version: "0.7"
   compile group: "org.apache.xmlgraphics", name: "batik-dom", version: "1.7"
   compile group: "org.apache.ant", name: "ant", version: "1.9.0"
   compile group: "org.apache.commons", name: "commons-lang3", version: "3.8.1"
   compile group: "com.martiansoftware", name: "jsap", version: "2.1"
   compile group: "org.ros.rosjava_core", name: "rosjava", version: "0.2.1"
   compile group: "org.ejml", name: "core", version: "0.30"
   compile group: "org.ejml", name: "dense64", version: "0.30"
   compile group: "org.boofcv", name: "io", version: "0.24.1"
   compile group: "org.boofcv", name: "ip", version: "0.24.1"
   compile group: "org.boofcv", name: "geo", version: "0.24.1"
   compile group: "org.boofcv", name: "calibration", version: "0.24.1"
   compile group: "org.boofcv", name: "visualize", version: "0.24.1"
   compile group: "org.ros.rosjava_bootstrap", name: "message_generation", version: "0.2.1"
   compile group: "com.github.wendykierp", name: "JTransforms", version: "3.1"
   compile group: "org.ros.rosjava_messages", name: "sensor_msgs", version: "1.11.7"
   compile group: "org.ros.rosjava_messages", name: "multisense_ros", version: "3.4.2"
   compile group: "org.bytedeco", name: "javacv-platform", version: "1.5"
   compile "org.ros.rosjava_messages:geometry_msgs:1.11.9"
   compile "org.boofcv:recognition:0.24.1"

   compile group: "us.ihmc", name: "euclid", version: "0.12.0"
   compile group: "us.ihmc", name: "ihmc-yovariables", version: "0.3.11"
   compile group: "us.ihmc", name: "ihmc-commons", version: "0.26.6"
   compile group: "us.ihmc", name: "ihmc-jmonkey-engine-toolkit", version: "0.12.8"
   compile group: "us.ihmc", name: "simulation-construction-set", version: "0.12.15"
   compile group: "us.ihmc", name: "ihmc-graphics-description", version: "0.12.12"
   compile group: "us.ihmc", name: "ihmc-robot-description", version: "0.12.7"
   compile group: "us.ihmc", name: "ihmc-javafx-toolkit", version: "0.12.9"
   compile group: "us.ihmc", name: "ihmc-humanoid-behaviors", version: "source"
   compile group: "us.ihmc", name: "ihmc-mocap", version: "source"
   compile group: "us.ihmc", name: "ihmc-common-walking-control-modules", version: "source"
   compile group: "us.ihmc", name: "ihmc-avatar-interfaces", version: "source"
   compile group: "us.ihmc", name: "ihmc-humanoid-robotics", version: "source"
   compile group: "us.ihmc", name: "ihmc-communication", version: "source"
   compile group: "us.ihmc", name: "ihmc-java-toolkit", version: "source"
   compile group: "us.ihmc", name: "ihmc-perception", version: "source"
   compile group: "us.ihmc", name: "ihmc-robotics-toolkit", version: "source"
   compile group: "us.ihmc", name: "ihmc-ros-tools", version: "source"
   compile group: "us.ihmc", name: "ihmc-whole-body-controller", version: "source"
   compile group: "us.ihmc", name: "ihmc-robot-data-logger", version: "source"
   compile group: "us.ihmc", name: "robotiq-hand-drivers", version: "source"
   compile group: "us.ihmc", name: "ihmc-model-file-loader", version: "source"
   compile group: "us.ihmc", name: "ihmc-sensor-processing", version: "source"
   compile group: "us.ihmc", name: "simulation-construction-set-tools", version: "source"
   compile group: "us.ihmc", name: "ihmc-robot-models", version: "source"
   compile group: "us.ihmc", name: "ihmc-simulation-toolkit", version: "source"
   compile group: "us.ihmc", name: "ihmc-robot-data-visualizer", version: "source"
   compile group: "us.ihmc", name: "ihmc-manipulation-planning", version: "source"
   compile group: "us.ihmc", name: "ihmc-parameter-tuner", version: "source"
   compile group: "us.ihmc", name: "ihmc-footstep-planning-visualizers", version: "source"
   compile group: "us.ihmc", name: "ihmc-avatar-interfaces-behavior-clean-room", version: "source"
   compile group: "us.ihmc", name: "ihmc-avatar-interfaces-behavior-fx-ui", version: "source"
}

testDependencies {
   compile group: "com.thoughtworks.xstream", name: "xstream", version: "1.4.7"

   compile group: "us.ihmc", name: "ihmc-commons-testing", version: "0.26.6"
   compile group: "us.ihmc", name: "ihmc-robotics-toolkit-test", version: "source"
   compile group: "us.ihmc", name: "ihmc-common-walking-control-modules-test", version: "source"
   compile group: "us.ihmc", name: "ihmc-avatar-interfaces-test", version: "source"
   compile group: "us.ihmc", name: "ihmc-humanoid-robotics-test", version: "source"
   compile group: "us.ihmc", name: "ihmc-sensor-processing-test", version: "source"
   compile group: "us.ihmc", name: "ihmc-simulation-toolkit-test", version: "source"
   compile group: "us.ihmc", name: "simulation-construction-set-tools-test", version: "source"
}

applicationName = "IHMCAtlasAPI"
mainClassName = "us.ihmc.atlas.AtlasROSAPINetworkProcessor"
applicationDefaultJvmArgs = ["-Xmx4g"]

startScripts {
   outputs.upToDateWhen { false }

   doLast {
      def simUnixScriptDemo01 = file(outputDir.canonicalPath + "/${applicationName}SimulatorDemo01")
      simUnixScriptDemo01.text = unixScript.text.replace("IHMCAtlasAPI", "IHMCAtlasAPISimulator").replace("AtlasROSAPINetworkProcessor", "AtlasDemo01ROSAPISimulator")
      simUnixScriptDemo01.setExecutable(true)

      def simWindowsScriptDemo01 = file(outputDir.canonicalPath + "/${applicationName}SimulatorDemo01.bat")
      simWindowsScriptDemo01.text = windowsScript.text.replace("IHMCAtlasAPI", "IHMCAtlasAPISimulator").replace("AtlasROSAPINetworkProcessor", "AtlasDemo01ROSAPISimulator")

      def simUnixScriptFinals = file(outputDir.canonicalPath + "/${applicationName}SimulatorFinals")
      simUnixScriptFinals.text = unixScript.text.replace("IHMCAtlasAPI", "IHMCAtlasAPISimulator").replace("AtlasROSAPINetworkProcessor", "AtlasFinalsROSAPISimulator")
      simUnixScriptFinals.setExecutable(true)

      def simWindowsScriptFinals = file(outputDir.canonicalPath + "/${applicationName}SimulatorFinals.bat")
      simWindowsScriptFinals.text = windowsScript.text.replace("IHMCAtlasAPI", "IHMCAtlasAPISimulator").replace("AtlasROSAPINetworkProcessor", "AtlasFinalsROSAPISimulator")

      def simUnixScriptVisualizer = file(outputDir.canonicalPath + "/IHMCRemoteAtlasVisualizer")
      simUnixScriptVisualizer.text = unixScript.text.replace("IHMCAtlasAPI", "IHMCRemoteAtlasVisualizer").replace("AtlasROSAPINetworkProcessor", "RemoteAtlasVisualizer")
      simUnixScriptVisualizer.setExecutable(true)

      def simWindowsScriptVisualizer = file(outputDir.canonicalPath + "/IHMCRemoteAtlasVisualizer.bat")
      simWindowsScriptVisualizer.text = windowsScript.text.replace("IHMCAtlasAPI", "IHMCRemoteAtlasVisualizer").replace("AtlasROSAPINetworkProcessor", "RemoteAtlasVisualizer")

      def simUnixScriptLogger = file(outputDir.canonicalPath + "/IHMCLogger")
      simUnixScriptLogger.text = unixScript.text.replace("IHMCAtlasAPI", "IHMCLogger").replace("us.ihmc.atlas.AtlasROSAPINetworkProcessor", "us.ihmc.robotDataLogger.logger.YoVariableLoggerDispatcher")
      simUnixScriptLogger.setExecutable(true)

      def simWindowsScriptLogger = file(outputDir.canonicalPath + "/IHMCLogger.bat")
      simWindowsScriptLogger.text = windowsScript.text.replace("IHMCAtlasAPI", "IHMCLogger").replace("us.ihmc.atlas.AtlasROSAPINetworkProcessor", "us.ihmc.robotDataLogger.logger.YoVariableLoggerDispatcher")

      def simUnixScriptGazebo = file(outputDir.canonicalPath + "/IHMCAtlasGazeboController")
      simUnixScriptGazebo.text = unixScript.text.replace("IHMCAtlasAPI", "IHMCAtlasGazeboController").replace("us.ihmc.atlas.AtlasROSAPINetworkProcessor", "us.ihmc.atlas.gazebo.AtlasGazeboControllerFactory")
      simUnixScriptGazebo.setExecutable(true)
   }
}

task createAllStartScripts() {
   doLast {
      // just a placeholder
   }
}
def scripts = ['behavior-module'       : 'us.ihmc.atlas.behaviors.AtlasBehaviorModule'
]
scripts.each() { scriptName, className ->
   def t = tasks.create(name: scriptName, type: CreateStartScripts) {
      mainClassName = className
      applicationName = scriptName
      defaultJvmOpts = ['-Dlog.level.us.ihmc=debug']
      outputDir = new File(project.buildDir, 'scripts')
      classpath = jar.outputs.files + project.configurations.runtime
   }
   applicationDistribution.into("bin") {
      from(t)
      fileMode = 0755
   }
   createAllStartScripts.dependsOn(t)
}

applicationDistribution.from(startScripts.outputDir) {
   into "bin"
}

remotes {
   cpu0 {
      host = "10.7.4.100"
      user = "shadylady"
      password = "ShadyLady"
      knownHosts = allowAnyHosts
   }
}

task deploy(dependsOn: installDist) {
   def directory = "/home/shadylady/atlas-behavior"

   doLast {
      ssh.run {
         session(remotes.cpu0) {
            execute("mkdir -p " + directory)

            execute("rm -rf " + directory + "/bin")
            execute("rm -rf " + directory + "/lib")
            execute("mkdir -p " + directory + "/bin")
            execute("mkdir -p " + directory + "/lib")

            def from = "build/install/IHMCAtlasAPI/bin/"
            file(from).list().each {
               put(from: from + it, into: directory + "/bin")
            }
            from = "build/install/IHMCAtlasAPI/lib/"
            file(from).list().each {
               put(from: from + it, into: directory + "/lib")
            }

            execute("chmod +x " + directory + "/bin/behavior-module")

            execute("echo " + project.version + " > " + directory + "/version.txt")
         }
      }
   }
}
