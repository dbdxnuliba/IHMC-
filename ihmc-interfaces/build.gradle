buildscript {
   repositories {
      maven { url "https://plugins.gradle.org/m2/" }
      mavenCentral()
      maven { url "http://dl.bintray.com/ihmcrobotics/maven-release" }
      maven { url "http://dl.bintray.com/ihmcrobotics/maven-vendor" }
      mavenLocal()
      jcenter()
   }
   dependencies {
      classpath "us.ihmc:ros2-msg-to-pubsub-generator:0.13.4"
//      classpath "com.bmuschko:gradle-docker-plugin:4.0.1"
   }
}

plugins {
   id("us.ihmc.ihmc-build") version "0.16.5"
   id("us.ihmc.ihmc-ci") version "4.25"
   id("us.ihmc.ihmc-cd") version "0.1"
   id("us.ihmc.log-tools") version "0.3.1"
}

//apply plugin: "com.bmuschko.docker-remote-api"

ihmc {
   loadProductProperties("../product.properties")

   configureDependencyResolution()
   resourceDirectory("main", "messages")
   resourceDirectory("main", "generated-idl")
   javaDirectory("main", "generated-java")
   resourceDirectory("generator", "docker")
   configurePublications()
}

mainDependencies {
   compile group: "us.ihmc", name: "euclid", version: "0.12.0"
   compile group: "us.ihmc", name: "euclid-geometry", version: "0.12.0"
   compile group: "us.ihmc", name: "ihmc-pub-sub", version: "0.10.2"
   compile group: "us.ihmc", name: "ros2-common-interfaces", version: "0.13.4"
   compile group: "us.ihmc", name: "ihmc-commons", version: "0.26.6"
}

testDependencies {
   compile group: "us.ihmc", name: "ihmc-ros2-library", version: "0.13.4"
}

generatorDependencies {
   compile group: "us.ihmc", name: "ihmc-commons", version: "0.26.6"
   compile group: "us.ihmc", name: "ros2-msg-to-pubsub-generator", version: "0.13.4"
}

//task buildImage(type: com.bmuschko.gradle.docker.tasks.image.DockerBuildImage) {
//   inputDir = file("src/generator/docker")
//   tag = "ihmc/ros1-bridge-build"
//}

def generator = new us.ihmc.ros2.rosidl.RosInterfaceGenerator();

task generateMessages {
   doFirst {
      delete("src/main/generated-idl")
      delete("src/main/generated-java")
      delete("src/main/messages/ros1/controller_msgs/msg")
      delete("build/tmp/generateMessages")

      def foundDependency = false
      copy {
         configurations.compile.findAll { it.name.contains("ros2-common-interfaces") }.each {
            from zipTree(it)
            foundDependency = true
         }
         into file("build/tmp/generateMessages/ros2-common-interfaces")
      }

      if (!foundDependency)
      {
         throw new org.gradle.api.GradleException("Could not find ros2-common-interfaces in configurations.compile!")
      }

      generator.addPackageRootToIDLGenerator(file("build/tmp/generateMessages/ros2-common-interfaces/rcl_interfaces").toPath());
      generator.addPackageRootToIDLGenerator(file("build/tmp/generateMessages/ros2-common-interfaces/common_interfaces").toPath());
      generator.addPackageRootToIDLGenerator(file("src/main/messages/ihmc_interfaces").toPath());
      generator.addPackageRootToROS1Generator(file("src/main/messages/ihmc_interfaces").toPath());

      generator.addCustomIDLFiles(file("build/tmp/generateMessages/ros2-common-interfaces/").toPath());

      generator.generate(file("build/tmp/generateMessages/generated-idl").toPath(), file("build/tmp/generateMessages/generated-ros1").toPath(), file("build/tmp/generateMessages/generated-java").toPath());

      copy {
         from "build/tmp/generateMessages/generated-idl/controller_msgs"
         into "src/main/generated-idl/controller_msgs"
      }

      copy {
         from "build/tmp/generateMessages/generated-java/controller_msgs"
         into "src/main/generated-java/controller_msgs"
      }

      copy {
         from "build/tmp/generateMessages/generated-ros1/controller_msgs"
         into "src/main/messages/ros1/controller_msgs"
      }

      generator.convertDirectoryToUnixEOL(file("src/main/generated-idl").toPath())
      generator.convertDirectoryToUnixEOL(file("src/main/generated-java").toPath())
      generator.convertDirectoryToUnixEOL(file("src/main/messages/ros1").toPath())
   }
}
