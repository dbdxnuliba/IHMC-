package us.ihmc.pathPlanning.visibilityGraphs;

import gnu.trove.list.array.TIntArrayList;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import us.ihmc.commons.ContinuousIntegrationTools;
import us.ihmc.commons.thread.ThreadTools;
import us.ihmc.euclid.axisAngle.AxisAngle;
import us.ihmc.euclid.geometry.ConvexPolygon2D;
import us.ihmc.euclid.geometry.tools.EuclidGeometryTools;
import us.ihmc.euclid.transform.RigidBodyTransform;
import us.ihmc.euclid.tuple2D.Point2D;
import us.ihmc.euclid.tuple3D.Point3D;
import us.ihmc.euclid.tuple3D.Vector3D;
import us.ihmc.javaFXToolkit.messager.JavaFXMessager;
import us.ihmc.pathPlanning.visibilityGraphs.dataStructure.NavigableRegion;
import us.ihmc.pathPlanning.visibilityGraphs.dataStructure.VisibilityMapWithNavigableRegion;
import us.ihmc.pathPlanning.visibilityGraphs.parameters.DefaultVisibilityGraphParameters;
import us.ihmc.pathPlanning.visibilityGraphs.parameters.VisibilityGraphsParametersBasics;
import us.ihmc.pathPlanning.visibilityGraphs.ui.messager.UIVisibilityGraphsTopics;
import us.ihmc.robotics.geometry.PlanarRegion;
import us.ihmc.robotics.geometry.PlanarRegionsList;

import java.util.ArrayList;
import java.util.List;

public class NavigableRegionsFactoryTest
{
   // Whether to start the UI or not.
   private static boolean VISUALIZE = true;

   // For enabling helpful prints.
   private static boolean DEBUG = true;

   private static VisibilityGraphsTestVisualizerApplication visualizerApplication = null;
   // Because we use JavaFX, there will be two instance of VisibilityGraphsFrameworkTest, one for running the test and one starting the ui. The messager has to be static so both the ui and test use the same instance.
   private static JavaFXMessager messager = null;

   @BeforeEach
   public void setup()
   {
      VISUALIZE = VISUALIZE && !ContinuousIntegrationTools.isRunningOnContinuousIntegrationServer();
      DEBUG = (VISUALIZE || (DEBUG && !ContinuousIntegrationTools.isRunningOnContinuousIntegrationServer()));

      if (VISUALIZE)
      {
         visualizerApplication = new VisibilityGraphsTestVisualizerApplication();
         visualizerApplication.startOnAThread();

         messager = visualizerApplication.getMessager();
      }
   }

   @Test
   public void testComplexProjection()
   {
      PlanarRegion groundRegion = getGroundRegion();
      PlanarRegion aboveRegion = getAbovePlanarRegion();

      PlanarRegionsList planarRegionsList = new PlanarRegionsList();
      planarRegionsList.addPlanarRegion(groundRegion);
      planarRegionsList.addPlanarRegion(aboveRegion);

      VisibilityGraphsParametersBasics visibilityGraphsParameters = new DefaultVisibilityGraphParameters();
      List<NavigableRegion> navigableRegions = NavigableRegionsFactory.createNavigableRegions(planarRegionsList.getPlanarRegionsAsList(), visibilityGraphsParameters);

      List<VisibilityMapWithNavigableRegion> visibilityMapWithNavigableRegions = new ArrayList<>();
      for (NavigableRegion navigableRegion : navigableRegions)
      {
         visibilityMapWithNavigableRegions.add(new VisibilityMapWithNavigableRegion(navigableRegion));
      }

      messager.submitMessage(UIVisibilityGraphsTopics.PlanarRegionData, planarRegionsList);
      messager.submitMessage(UIVisibilityGraphsTopics.NavigableRegionData, visibilityMapWithNavigableRegions);
      ThreadTools.sleepForever();
   }

   private static PlanarRegion getGroundRegion()
   {
      int regionId = 425315096;
      int concaveHullSize = 393;
      int numberOfPolygons = 10;
      TIntArrayList polygonSizes = new TIntArrayList();
      polygonSizes.add(5);
      polygonSizes.add(8);
      polygonSizes.add(14);
      polygonSizes.add(10);
      polygonSizes.add(8);
      polygonSizes.add(9);
      polygonSizes.add(12);
      polygonSizes.add(14);
      polygonSizes.add(10);
      polygonSizes.add(13);

      Point3D origin = new Point3D(6.709234714508057, 6.776942729949951, 5.778760169050656E-5);
      Vector3D normal = new Vector3D(-9.315730711318764E-8, 1.2960300829938054E-5, 0.999999999916011);
      AxisAngle orientation = EuclidGeometryTools.axisAngleFromZUpToVector3D(normal);

      RigidBodyTransform transformToWorld = new RigidBodyTransform(orientation, origin);

      List<Point2D> allPoints = new ArrayList<>();
      allPoints.add(new Point2D(-4.7403950691223145, -4.135128974914551));
      allPoints.add(new Point2D(-4.685483932495117, -4.081146240234375));
      allPoints.add(new Point2D(-4.652767658233643, -3.99074387550354));
      allPoints.add(new Point2D(-4.570417404174805, -3.9349677562713623));
      allPoints.add(new Point2D(-4.552718639373779, -3.8872897624969482));
      allPoints.add(new Point2D(-4.504167079925537, -3.8371729850769043));
      allPoints.add(new Point2D(-4.4686994552612305, -3.796901226043701));
      allPoints.add(new Point2D(-4.421762466430664, -3.748596668243408));
      allPoints.add(new Point2D(-4.45435094833374, -3.68554949760437));
      allPoints.add(new Point2D(-4.548096656799316, -3.677738904953003));
      allPoints.add(new Point2D(-4.578512668609619, -3.723381757736206));
      allPoints.add(new Point2D(-4.626069068908691, -3.7721405029296875));
      allPoints.add(new Point2D(-4.674553394317627, -3.821913003921509));
      allPoints.add(new Point2D(-4.719333648681641, -3.8649115562438965));
      allPoints.add(new Point2D(-4.7611284255981445, -3.915255069732666));
      allPoints.add(new Point2D(-4.812273979187012, -3.968001127243042));
      allPoints.add(new Point2D(-4.8644490242004395, -4.021878719329834));
      allPoints.add(new Point2D(-4.954554557800293, -4.038153171539307));
      allPoints.add(new Point2D(-5.019192218780518, -4.006241798400879));
      allPoints.add(new Point2D(-5.06597900390625, -3.929356813430786));
      allPoints.add(new Point2D(-5.027763366699219, -3.8851258754730225));
      allPoints.add(new Point2D(-5.018005847930908, -3.799926280975342));
      allPoints.add(new Point2D(-4.926207065582275, -3.7813143730163574));
      allPoints.add(new Point2D(-4.876867771148682, -3.7309868335723877));
      allPoints.add(new Point2D(-4.883349895477295, -3.6579384803771973));
      allPoints.add(new Point2D(-4.793449878692627, -3.641331434249878));
      allPoints.add(new Point2D(-4.746567249298096, -3.5937516689300537));
      allPoints.add(new Point2D(-4.740345478057861, -3.563941240310669));
      allPoints.add(new Point2D(-4.829428195953369, -3.536787986755371));
      allPoints.add(new Point2D(-4.911318302154541, -3.519418954849243));
      allPoints.add(new Point2D(-4.945611953735352, -3.559030532836914));
      allPoints.add(new Point2D(-4.993192672729492, -3.6069822311401367));
      allPoints.add(new Point2D(-5.02747917175293, -3.6477229595184326));
      allPoints.add(new Point2D(-5.115691661834717, -3.5236294269561768));
      allPoints.add(new Point2D(-5.206705093383789, -3.493518114089966));
      allPoints.add(new Point2D(-5.298876762390137, -3.542062759399414));
      allPoints.add(new Point2D(-5.2866644859313965, -3.4932525157928467));
      allPoints.add(new Point2D(-5.273212432861328, -3.4448282718658447));
      allPoints.add(new Point2D(-5.232128620147705, -3.3970932960510254));
      allPoints.add(new Point2D(-5.069811820983887, -3.23018741607666));
      allPoints.add(new Point2D(-5.100488185882568, -3.1833839416503906));
      allPoints.add(new Point2D(-5.12109899520874, -3.0893688201904297));
      allPoints.add(new Point2D(-5.074615001678467, -3.0508713722229004));
      allPoints.add(new Point2D(-5.040408134460449, -3.011774778366089));
      allPoints.add(new Point2D(-4.936992645263672, -2.908208131790161));
      allPoints.add(new Point2D(-4.895939826965332, -2.8277461528778076));
      allPoints.add(new Point2D(-4.859825611114502, -2.785644292831421));
      allPoints.add(new Point2D(-4.810720443725586, -2.737262725830078));
      allPoints.add(new Point2D(-4.775627136230469, -2.696463108062744));
      allPoints.add(new Point2D(-4.7279486656188965, -2.6496901512145996));
      allPoints.add(new Point2D(-4.6938347816467285, -2.610136032104492));
      allPoints.add(new Point2D(-4.640026092529297, -2.5701375007629395));
      allPoints.add(new Point2D(-4.614354610443115, -2.5265374183654785));
      allPoints.add(new Point2D(-4.56936502456665, -2.4827709197998047));
      allPoints.add(new Point2D(-4.4194655418396, -2.326035499572754));
      allPoints.add(new Point2D(-4.358664512634277, -2.2563095092773438));
      allPoints.add(new Point2D(-4.317803382873535, -2.2171316146850586));
      allPoints.add(new Point2D(-4.248610973358154, -2.1455063819885254));
      allPoints.add(new Point2D(-4.1915507316589355, -2.0804848670959473));
      allPoints.add(new Point2D(-4.201378345489502, -1.9854860305786133));
      allPoints.add(new Point2D(-4.162835121154785, -1.8886933326721191));
      allPoints.add(new Point2D(-4.155453205108643, -1.8038134574890137));
      allPoints.add(new Point2D(-3.6052823066711426, -1.2034058570861816));
      allPoints.add(new Point2D(-3.3073906898498535, -0.8781924843788147));
      allPoints.add(new Point2D(-3.1608638763427734, -0.7178712487220764));
      allPoints.add(new Point2D(-3.1314151287078857, -0.6841831803321838));
      allPoints.add(new Point2D(-3.0931496620178223, -0.6246214509010315));
      allPoints.add(new Point2D(-3.0340189933776855, -0.565308153629303));
      allPoints.add(new Point2D(-2.9921066761016846, -0.5157890915870667));
      allPoints.add(new Point2D(-2.936636447906494, -0.46705013513565063));
      allPoints.add(new Point2D(-2.894117593765259, -0.4106612503528595));
      allPoints.add(new Point2D(-2.838535785675049, -0.35543400049209595));
      allPoints.add(new Point2D(-2.781022310256958, -0.30094677209854126));
      allPoints.add(new Point2D(-2.741427421569824, -0.2552018463611603));
      allPoints.add(new Point2D(-2.694417953491211, -0.20770031213760376));
      allPoints.add(new Point2D(-2.6540207862854004, -0.16125109791755676));
      allPoints.add(new Point2D(-2.5940451622009277, -0.0973387137055397));
      allPoints.add(new Point2D(-2.4330782890319824, 0.07712073624134064));
      allPoints.add(new Point2D(-2.380335807800293, 0.13568349182605743));
      allPoints.add(new Point2D(-2.345061779022217, 0.171597421169281));
      allPoints.add(new Point2D(-2.3073034286499023, 0.21481271088123322));
      allPoints.add(new Point2D(-2.189426898956299, 0.3440699279308319));
      allPoints.add(new Point2D(-2.141930103302002, 0.40163320302963257));
      allPoints.add(new Point2D(-2.106423854827881, 0.44159743189811707));
      allPoints.add(new Point2D(-2.061418056488037, 0.48308369517326355));
      allPoints.add(new Point2D(-2.0206050872802734, 0.5282211303710938));
      allPoints.add(new Point2D(-1.9680355787277222, 0.5872477889060974));
      allPoints.add(new Point2D(-1.8955849409103394, 0.6648139357566833));
      allPoints.add(new Point2D(-1.8444322347640991, 0.7212194800376892));
      allPoints.add(new Point2D(-1.7602237462997437, 0.8036836981773376));
      allPoints.add(new Point2D(-1.7326339483261108, 0.8368973135948181));
      allPoints.add(new Point2D(-1.6807483434677124, 0.9003128409385681));
      allPoints.add(new Point2D(-1.499987006187439, 1.095703125));
      allPoints.add(new Point2D(-1.4658039808273315, 1.1355595588684082));
      allPoints.add(new Point2D(-1.2614158391952515, 1.3533633947372437));
      allPoints.add(new Point2D(-1.1064876317977905, 1.5236687660217285));
      allPoints.add(new Point2D(-1.0211337804794312, 1.6203646659851074));
      allPoints.add(new Point2D(-0.9389508962631226, 1.6669631004333496));
      allPoints.add(new Point2D(-0.8935641050338745, 1.731055736541748));
      allPoints.add(new Point2D(-0.8493355512619019, 1.7749676704406738));
      allPoints.add(new Point2D(-0.4437684118747711, 2.219728946685791));
      allPoints.add(new Point2D(-0.4108957350254059, 2.2580151557922363));
      allPoints.add(new Point2D(-0.21451178193092346, 2.4673781394958496));
      allPoints.add(new Point2D(-0.06560888141393661, 2.631042957305908));
      allPoints.add(new Point2D(0.04500827565789223, 2.7283473014831543));
      allPoints.add(new Point2D(0.10896740108728409, 2.7764554023742676));
      allPoints.add(new Point2D(0.1364670693874359, 2.8035454750061035));
      allPoints.add(new Point2D(0.2102108895778656, 2.8773903846740723));
      allPoints.add(new Point2D(0.22467049956321716, 2.8919472694396973));
      allPoints.add(new Point2D(0.2701965272426605, 2.9452147483825684));
      allPoints.add(new Point2D(0.29928264021873474, 3.0955300331115723));
      allPoints.add(new Point2D(0.33235082030296326, 3.1472859382629395));
      allPoints.add(new Point2D(0.3963523805141449, 3.194762706756592));
      allPoints.add(new Point2D(0.4503684937953949, 3.2386088371276855));
      allPoints.add(new Point2D(0.511360764503479, 3.2835898399353027));
      allPoints.add(new Point2D(0.5629535913467407, 3.325286388397217));
      allPoints.add(new Point2D(0.6211286783218384, 3.3679556846618652));
      allPoints.add(new Point2D(0.7020336389541626, 3.428938388824463));
      allPoints.add(new Point2D(0.8258057832717896, 3.526754856109619));
      allPoints.add(new Point2D(1.107709527015686, 3.8273377418518066));
      allPoints.add(new Point2D(1.1265350580215454, 3.9117140769958496));
      allPoints.add(new Point2D(1.2173587083816528, 3.9864954948425293));
      allPoints.add(new Point2D(1.291817307472229, 4.044356822967529));
      allPoints.add(new Point2D(1.3425956964492798, 4.086083889007568));
      allPoints.add(new Point2D(1.4106746912002563, 4.1473212242126465));
      allPoints.add(new Point2D(1.4265552759170532, 4.163524150848389));
      allPoints.add(new Point2D(1.488695740699768, 4.229193210601807));
      allPoints.add(new Point2D(1.5540138483047485, 4.291550159454346));
      allPoints.add(new Point2D(1.633247971534729, 4.316140651702881));
      allPoints.add(new Point2D(1.7209049463272095, 4.385807514190674));
      allPoints.add(new Point2D(1.8045822381973267, 4.45253324508667));
      allPoints.add(new Point2D(1.8782840967178345, 4.5113396644592285));
      allPoints.add(new Point2D(1.9414316415786743, 4.567931652069092));
      allPoints.add(new Point2D(1.9794565439224243, 4.608932018280029));
      allPoints.add(new Point2D(2.1089959144592285, 4.7492547035217285));
      allPoints.add(new Point2D(2.1193995475769043, 4.762234210968018));
      allPoints.add(new Point2D(2.144138813018799, 4.8486456871032715));
      allPoints.add(new Point2D(2.299147129058838, 4.9724345207214355));
      allPoints.add(new Point2D(2.353532314300537, 5.016739368438721));
      allPoints.add(new Point2D(2.3845953941345215, 5.0507588386535645));
      allPoints.add(new Point2D(2.422053813934326, 5.093128681182861));
      allPoints.add(new Point2D(2.492288112640381, 5.167468547821045));
      allPoints.add(new Point2D(2.565889835357666, 5.184199810028076));
      allPoints.add(new Point2D(2.614806652069092, 5.222710132598877));
      allPoints.add(new Point2D(2.6340842247009277, 5.238001346588135));
      allPoints.add(new Point2D(2.7242236137390137, 5.309549808502197));
      allPoints.add(new Point2D(2.7798476219177246, 5.354057788848877));
      allPoints.add(new Point2D(2.848177433013916, 5.421156406402588));
      allPoints.add(new Point2D(2.8954615592956543, 5.47835111618042));
      allPoints.add(new Point2D(2.9063620567321777, 5.491536617279053));
      allPoints.add(new Point2D(2.9245219230651855, 5.513504505157471));
      allPoints.add(new Point2D(3.0021519660949707, 5.619046688079834));
      allPoints.add(new Point2D(3.0986790657043457, 5.607332706451416));
      allPoints.add(new Point2D(3.116255283355713, 5.621288776397705));
      allPoints.add(new Point2D(3.1556925773620605, 5.652655124664307));
      allPoints.add(new Point2D(3.2273173332214355, 5.644744396209717));
      allPoints.add(new Point2D(3.309241771697998, 5.660288333892822));
      allPoints.add(new Point2D(3.38075590133667, 5.7353835105896));
      allPoints.add(new Point2D(3.438281536102295, 5.7995924949646));
      allPoints.add(new Point2D(3.478463649749756, 5.84568452835083));
      allPoints.add(new Point2D(3.5373950004577637, 5.907223224639893));
      allPoints.add(new Point2D(3.687880039215088, 6.072310924530029));
      allPoints.add(new Point2D(3.7345242500305176, 6.125133991241455));
      allPoints.add(new Point2D(3.802483081817627, 6.195358753204346));
      allPoints.add(new Point2D(3.852234363555908, 6.251323223114014));
      allPoints.add(new Point2D(3.9074110984802246, 6.2603068351745605));
      allPoints.add(new Point2D(3.9145665168762207, 6.120657444000244));
      allPoints.add(new Point2D(3.7829575538635254, 5.977005481719971));
      allPoints.add(new Point2D(3.732156276702881, 5.920630931854248));
      allPoints.add(new Point2D(3.682807445526123, 5.8657612800598145));
      allPoints.add(new Point2D(3.6381964683532715, 5.819464206695557));
      allPoints.add(new Point2D(3.4843125343322754, 5.652019023895264));
      allPoints.add(new Point2D(3.4416451454162598, 5.604005336761475));
      allPoints.add(new Point2D(3.46604585647583, 5.510098934173584));
      allPoints.add(new Point2D(3.4961743354797363, 5.439066410064697));
      allPoints.add(new Point2D(3.5212903022766113, 5.3895697593688965));
      allPoints.add(new Point2D(3.567155361175537, 5.324791431427002));
      allPoints.add(new Point2D(3.504930019378662, 5.3072333335876465));
      allPoints.add(new Point2D(3.530609607696533, 5.225172519683838));
      allPoints.add(new Point2D(3.561924457550049, 5.151408672332764));
      allPoints.add(new Point2D(3.563337802886963, 5.095425128936768));
      allPoints.add(new Point2D(3.6141695976257324, 5.062148571014404));
      allPoints.add(new Point2D(3.7265467643737793, 4.9472832679748535));
      allPoints.add(new Point2D(3.7747416496276855, 4.898643970489502));
      allPoints.add(new Point2D(3.8667140007019043, 4.810135364532471));
      allPoints.add(new Point2D(3.91837739944458, 4.75506067276001));
      allPoints.add(new Point2D(3.996192455291748, 4.696035861968994));
      allPoints.add(new Point2D(4.035709857940674, 4.6568922996521));
      allPoints.add(new Point2D(4.083632946014404, 4.616030216217041));
      allPoints.add(new Point2D(4.116796970367432, 4.576229572296143));
      allPoints.add(new Point2D(4.18197774887085, 4.509928226470947));
      allPoints.add(new Point2D(4.219101428985596, 4.474188327789307));
      allPoints.add(new Point2D(4.260671138763428, 4.4322686195373535));
      allPoints.add(new Point2D(4.301971912384033, 4.394387722015381));
      allPoints.add(new Point2D(4.357661724090576, 4.337840557098389));
      allPoints.add(new Point2D(4.459947109222412, 4.256009578704834));
      allPoints.add(new Point2D(4.516709804534912, 4.214237689971924));
      allPoints.add(new Point2D(4.595221042633057, 4.134663105010986));
      allPoints.add(new Point2D(4.649459362030029, 4.117268085479736));
      allPoints.add(new Point2D(4.695287227630615, 4.0505146980285645));
      allPoints.add(new Point2D(4.762759685516357, 4.009185314178467));
      allPoints.add(new Point2D(4.827174663543701, 3.9625134468078613));
      allPoints.add(new Point2D(4.867908000946045, 3.9249110221862793));
      allPoints.add(new Point2D(4.9055094718933105, 3.891897678375244));
      allPoints.add(new Point2D(4.948165416717529, 3.8610825538635254));
      allPoints.add(new Point2D(4.9860405921936035, 3.8242287635803223));
      allPoints.add(new Point2D(5.025192737579346, 3.7871222496032715));
      allPoints.add(new Point2D(5.138449192047119, 3.696423053741455));
      allPoints.add(new Point2D(5.19525671005249, 3.6558995246887207));
      allPoints.add(new Point2D(5.2374091148376465, 3.6168675422668457));
      allPoints.add(new Point2D(5.277441501617432, 3.577606678009033));
      allPoints.add(new Point2D(5.399562358856201, 3.473985195159912));
      allPoints.add(new Point2D(5.464904308319092, 3.426819324493408));
      allPoints.add(new Point2D(5.527553081512451, 3.37583589553833));
      allPoints.add(new Point2D(5.498534679412842, 3.3326869010925293));
      allPoints.add(new Point2D(5.3922247886657715, 3.2027745246887207));
      allPoints.add(new Point2D(5.359068393707275, 3.1568989753723145));
      allPoints.add(new Point2D(5.279730319976807, 3.0557045936584473));
      allPoints.add(new Point2D(5.239147663116455, 3.0159668922424316));
      allPoints.add(new Point2D(5.161630153656006, 2.9162373542785645));
      allPoints.add(new Point2D(5.097894191741943, 2.8400168418884277));
      allPoints.add(new Point2D(5.037364482879639, 2.7758431434631348));
      allPoints.add(new Point2D(5.001044750213623, 2.7051587104797363));
      allPoints.add(new Point2D(4.94142484664917, 2.6488871574401855));
      allPoints.add(new Point2D(4.879279613494873, 2.570692539215088));
      allPoints.add(new Point2D(4.823035717010498, 2.49489164352417));
      allPoints.add(new Point2D(4.682281017303467, 2.3362441062927246));
      allPoints.add(new Point2D(4.618601322174072, 2.2600245475769043));
      allPoints.add(new Point2D(4.574814319610596, 2.2163290977478027));
      allPoints.add(new Point2D(4.544345378875732, 2.147122859954834));
      allPoints.add(new Point2D(4.484717845916748, 2.0844836235046387));
      allPoints.add(new Point2D(4.4413676261901855, 2.032911777496338));
      allPoints.add(new Point2D(4.385603427886963, 1.9790873527526855));
      allPoints.add(new Point2D(4.341285228729248, 1.915757656097412));
      allPoints.add(new Point2D(4.286994457244873, 1.8545403480529785));
      allPoints.add(new Point2D(4.23081636428833, 1.7945141792297363));
      allPoints.add(new Point2D(4.193004131317139, 1.7515873908996582));
      allPoints.add(new Point2D(4.105279445648193, 1.6514697074890137));
      allPoints.add(new Point2D(4.066532611846924, 1.5729212760925293));
      allPoints.add(new Point2D(3.9357523918151855, 1.430077075958252));
      allPoints.add(new Point2D(3.889443874359131, 1.3477177619934082));
      allPoints.add(new Point2D(3.848172664642334, 1.3033299446105957));
      allPoints.add(new Point2D(3.7468371391296387, 1.1905598640441895));
      allPoints.add(new Point2D(3.710099697113037, 1.147165298461914));
      allPoints.add(new Point2D(3.6219420433044434, 1.051131248474121));
      allPoints.add(new Point2D(3.5747885704040527, 0.9965319037437439));
      allPoints.add(new Point2D(3.4400906562805176, 0.8311366438865662));
      allPoints.add(new Point2D(3.3898367881774902, 0.7556318640708923));
      allPoints.add(new Point2D(3.320216655731201, 0.6915993094444275));
      allPoints.add(new Point2D(3.283891201019287, 0.6340441107749939));
      allPoints.add(new Point2D(3.239258289337158, 0.5948767066001892));
      allPoints.add(new Point2D(3.1967740058898926, 0.5337657332420349));
      allPoints.add(new Point2D(3.1343932151794434, 0.4670366942882538));
      allPoints.add(new Point2D(3.0523905754089355, 0.3741597533226013));
      allPoints.add(new Point2D(2.9595046043395996, 0.30753177404403687));
      allPoints.add(new Point2D(2.8749117851257324, 0.3269891142845154));
      allPoints.add(new Point2D(2.783322811126709, 0.32602784037590027));
      allPoints.add(new Point2D(2.7617640495300293, 0.31551119685173035));
      allPoints.add(new Point2D(2.641785144805908, 0.19371457397937775));
      allPoints.add(new Point2D(2.602339267730713, 0.15144820511341095));
      allPoints.add(new Point2D(2.559401035308838, 0.07183308899402618));
      allPoints.add(new Point2D(2.5184378623962402, 0.03295465558767319));
      allPoints.add(new Point2D(2.519896984100342, -0.06310038268566132));
      allPoints.add(new Point2D(2.566567897796631, -0.11148743331432343));
      allPoints.add(new Point2D(2.501136302947998, -0.19033674895763397));
      allPoints.add(new Point2D(2.4442734718322754, -0.247040793299675));
      allPoints.add(new Point2D(2.384047031402588, -0.3109436333179474));
      allPoints.add(new Point2D(2.325533390045166, -0.37438303232192993));
      allPoints.add(new Point2D(2.2817606925964355, -0.4085236191749573));
      allPoints.add(new Point2D(2.244520664215088, -0.44860604405403137));
      allPoints.add(new Point2D(2.2026591300964355, -0.5078282952308655));
      allPoints.add(new Point2D(2.1685194969177246, -0.5502172112464905));
      allPoints.add(new Point2D(2.108407497406006, -0.6118088364601135));
      allPoints.add(new Point2D(2.0598654747009277, -0.6506643891334534));
      allPoints.add(new Point2D(1.9916645288467407, -0.7112227082252502));
      allPoints.add(new Point2D(1.9849096536636353, -0.7185731530189514));
      allPoints.add(new Point2D(1.9747921228408813, -0.7296004891395569));
      allPoints.add(new Point2D(1.9579521417617798, -0.7479797005653381));
      allPoints.add(new Point2D(1.9209495782852173, -0.788398802280426));
      allPoints.add(new Point2D(1.8681808710098267, -0.8186689019203186));
      allPoints.add(new Point2D(1.8301712274551392, -0.9139905571937561));
      allPoints.add(new Point2D(1.7437673807144165, -0.9486146569252014));
      allPoints.add(new Point2D(1.7274929285049438, -0.9661527276039124));
      allPoints.add(new Point2D(1.6804710626602173, -1.0233139991760254));
      allPoints.add(new Point2D(1.6190201044082642, -1.0848822593688965));
      allPoints.add(new Point2D(1.6029764413833618, -1.1032347679138184));
      allPoints.add(new Point2D(1.5546823740005493, -1.1600055694580078));
      allPoints.add(new Point2D(1.516778588294983, -1.2010164260864258));
      allPoints.add(new Point2D(0.9450846910476685, -1.8256735801696777));
      allPoints.add(new Point2D(0.8717952966690063, -1.8889789581298828));
      allPoints.add(new Point2D(0.8554826974868774, -1.822120189666748));
      allPoints.add(new Point2D(0.7665425539016724, -1.811872959136963));
      allPoints.add(new Point2D(0.7552601099014282, -1.8222861289978027));
      allPoints.add(new Point2D(0.706642746925354, -1.8676061630249023));
      allPoints.add(new Point2D(0.6989694833755493, -1.881629467010498));
      allPoints.add(new Point2D(0.7572318315505981, -1.9582099914550781));
      allPoints.add(new Point2D(0.7535964250564575, -2.016834259033203));
      allPoints.add(new Point2D(0.5440694093704224, -2.24698543548584));
      allPoints.add(new Point2D(0.44335898756980896, -2.302971363067627));
      allPoints.add(new Point2D(0.40816792845726013, -2.340512752532959));
      allPoints.add(new Point2D(0.3650451600551605, -2.3875041007995605));
      allPoints.add(new Point2D(0.33469876646995544, -2.475693702697754));
      allPoints.add(new Point2D(0.2069149911403656, -2.6136436462402344));
      allPoints.add(new Point2D(0.10243520885705948, -2.675281524658203));
      allPoints.add(new Point2D(0.08637676388025284, -2.6925463676452637));
      allPoints.add(new Point2D(0.07053003460168839, -2.709660530090332));
      allPoints.add(new Point2D(0.009087656624615192, -2.776717185974121));
      allPoints.add(new Point2D(-0.005825902335345745, -2.7931578159332275));
      allPoints.add(new Point2D(-0.020574474707245827, -2.809478521347046));
      allPoints.add(new Point2D(-0.049958135932683945, -2.8956198692321777));
      allPoints.add(new Point2D(-0.13593998551368713, -2.935357093811035));
      allPoints.add(new Point2D(-0.1430911123752594, -2.9429385662078857));
      allPoints.add(new Point2D(-0.150200754404068, -2.950500249862671));
      allPoints.add(new Point2D(-0.16078606247901917, -2.9618048667907715));
      allPoints.add(new Point2D(-0.6318849325180054, -3.4766623973846436));
      allPoints.add(new Point2D(-0.7166565656661987, -3.441093921661377));
      allPoints.add(new Point2D(-0.759386420249939, -3.463057041168213));
      allPoints.add(new Point2D(-0.8454264402389526, -3.5607388019561768));
      allPoints.add(new Point2D(-0.8866838216781616, -3.604069948196411));
      allPoints.add(new Point2D(-0.9441322088241577, -3.665552854537964));
      allPoints.add(new Point2D(-0.9857949018478394, -3.7163407802581787));
      allPoints.add(new Point2D(-1.0285009145736694, -3.760645866394043));
      allPoints.add(new Point2D(-1.0904325246810913, -3.8312344551086426));
      allPoints.add(new Point2D(-1.1431540250778198, -3.8829567432403564));
      allPoints.add(new Point2D(-1.2582682371139526, -4.014894485473633));
      allPoints.add(new Point2D(-1.3455442190170288, -4.100861549377441));
      allPoints.add(new Point2D(-1.4249933958053589, -4.124876499176025));
      allPoints.add(new Point2D(-1.449318289756775, -4.146023273468018));
      allPoints.add(new Point2D(-1.4994968175888062, -4.205711364746094));
      allPoints.add(new Point2D(-1.557062029838562, -4.268670082092285));
      allPoints.add(new Point2D(-1.6352452039718628, -4.354303359985352));
      allPoints.add(new Point2D(-1.6731709241867065, -4.3958635330200195));
      allPoints.add(new Point2D(-1.7369645833969116, -4.4491777420043945));
      allPoints.add(new Point2D(-1.7603639364242554, -4.4724884033203125));
      allPoints.add(new Point2D(-1.8162568807601929, -4.552113056182861));
      allPoints.add(new Point2D(-1.8895434141159058, -4.632017612457275));
      allPoints.add(new Point2D(-1.936125636100769, -4.665061950683594));
      allPoints.add(new Point2D(-1.968762755393982, -4.693781852722168));
      allPoints.add(new Point2D(-2.052546501159668, -4.781545162200928));
      allPoints.add(new Point2D(-2.2017664909362793, -4.938721656799316));
      allPoints.add(new Point2D(-2.2655234336853027, -5.006598949432373));
      allPoints.add(new Point2D(-2.3314146995544434, -5.078035831451416));
      allPoints.add(new Point2D(-2.4312071800231934, -5.179427146911621));
      allPoints.add(new Point2D(-2.4693193435668945, -5.223809719085693));
      allPoints.add(new Point2D(-2.5402870178222656, -5.287402153015137));
      allPoints.add(new Point2D(-2.5755696296691895, -5.331258296966553));
      allPoints.add(new Point2D(-2.729677438735962, -5.492341041564941));
      allPoints.add(new Point2D(-2.817448616027832, -5.589600086212158));
      allPoints.add(new Point2D(-2.8556833267211914, -5.626317024230957));
      allPoints.add(new Point2D(-2.90129017829895, -5.67514705657959));
      allPoints.add(new Point2D(-2.941107749938965, -5.71480131149292));
      allPoints.add(new Point2D(-3.027928113937378, -5.76664400100708));
      allPoints.add(new Point2D(-3.097303867340088, -5.735570430755615));
      allPoints.add(new Point2D(-3.24874210357666, -5.6797003746032715));
      allPoints.add(new Point2D(-3.2848610877990723, -5.631801128387451));
      allPoints.add(new Point2D(-3.3245179653167725, -5.600214958190918));
      allPoints.add(new Point2D(-3.352423906326294, -5.523988246917725));
      allPoints.add(new Point2D(-3.440966844558716, -5.480815887451172));
      allPoints.add(new Point2D(-3.499533176422119, -5.424393653869629));
      allPoints.add(new Point2D(-3.5736162662506104, -5.365026473999023));
      allPoints.add(new Point2D(-3.571922779083252, -5.308333396911621));
      allPoints.add(new Point2D(-3.5716466903686523, -5.290297508239746));
      allPoints.add(new Point2D(-3.6277339458465576, -5.21232795715332));
      allPoints.add(new Point2D(-3.6829042434692383, -5.272718906402588));
      allPoints.add(new Point2D(-3.751311779022217, -5.163090705871582));
      allPoints.add(new Point2D(-3.843104600906372, -5.036890983581543));
      allPoints.add(new Point2D(-3.7862210273742676, -4.982804298400879));
      allPoints.add(new Point2D(-3.7318692207336426, -4.9253692626953125));
      allPoints.add(new Point2D(-3.6787304878234863, -4.8691864013671875));
      allPoints.add(new Point2D(-3.627537250518799, -4.811614513397217));
      allPoints.add(new Point2D(-3.5871164798736572, -4.770496845245361));
      allPoints.add(new Point2D(-3.537764549255371, -4.715644359588623));
      allPoints.add(new Point2D(-3.4874393939971924, -4.668312072753906));
      allPoints.add(new Point2D(-3.5434775352478027, -4.594754219055176));
      allPoints.add(new Point2D(-3.6540093421936035, -4.5681233406066895));
      allPoints.add(new Point2D(-3.721824884414673, -4.6347975730896));
      allPoints.add(new Point2D(-3.8091065883636475, -4.674717426300049));
      allPoints.add(new Point2D(-3.8382153511047363, -4.690577507019043));
      allPoints.add(new Point2D(-3.8590846061706543, -4.77927303314209));
      allPoints.add(new Point2D(-3.917729139328003, -4.769371509552002));
      allPoints.add(new Point2D(-3.9303693771362305, -4.854280471801758));
      allPoints.add(new Point2D(-4.125998497009277, -4.727841854095459));
      allPoints.add(new Point2D(-4.214529514312744, -4.682061672210693));
      allPoints.add(new Point2D(-4.284864902496338, -4.634904861450195));
      allPoints.add(new Point2D(-4.299655914306641, -4.628946304321289));
      allPoints.add(new Point2D(-4.425721645355225, -4.519731044769287));
      allPoints.add(new Point2D(-4.417551517486572, -4.453341960906982));
      allPoints.add(new Point2D(-4.471218585968018, -4.42604398727417));
      allPoints.add(new Point2D(-4.521774768829346, -4.443136215209961));
      allPoints.add(new Point2D(-4.542876243591309, -4.3813700675964355));
      allPoints.add(new Point2D(-4.617451190948486, -4.324472427368164));
      allPoints.add(new Point2D(-4.712095260620117, -4.276363372802734));
      allPoints.add(new Point2D(-4.7572712898254395, -4.187997817993164));
      allPoints.add(new Point2D(3.309241771697998, 5.660288333892822));
      allPoints.add(new Point2D(3.310229778289795, 5.661370754241943));
      allPoints.add(new Point2D(3.4416451454162598, 5.604005336761475));
      allPoints.add(new Point2D(3.567155361175537, 5.324791431427002));
      allPoints.add(new Point2D(3.5602316856384277, 5.322837829589844));
      allPoints.add(new Point2D(3.310229778289795, 5.661370754241943));
      allPoints.add(new Point2D(3.478463649749756, 5.84568452835083));
      allPoints.add(new Point2D(3.7345242500305176, 6.125133991241455));
      allPoints.add(new Point2D(3.852234363555908, 6.251323223114014));
      allPoints.add(new Point2D(3.9074110984802246, 6.2603068351745605));
      allPoints.add(new Point2D(3.9145665168762207, 6.120657444000244));
      allPoints.add(new Point2D(3.682807445526123, 5.8657612800598145));
      allPoints.add(new Point2D(3.4416451454162598, 5.604005336761475));
      allPoints.add(new Point2D(-4.201378345489502, -1.9854860305786133));
      allPoints.add(new Point2D(-4.155453205108643, -1.8038134574890137));
      allPoints.add(new Point2D(-3.0931496620178223, -0.6246214509010315));
      allPoints.add(new Point2D(0.33235082030296326, 3.1472859382629395));
      allPoints.add(new Point2D(1.1265350580215454, 3.9117140769958496));
      allPoints.add(new Point2D(2.144138813018799, 4.8486456871032715));
      allPoints.add(new Point2D(2.492288112640381, 5.167468547821045));
      allPoints.add(new Point2D(3.0021519660949707, 5.619046688079834));
      allPoints.add(new Point2D(3.1556925773620605, 5.652655124664307));
      allPoints.add(new Point2D(3.309241771697998, 5.660288333892822));
      allPoints.add(new Point2D(3.5602316856384277, 5.322837829589844));
      allPoints.add(new Point2D(3.7270257472991943, 4.9467997550964355));
      allPoints.add(new Point2D(-3.4564576148986816, -2.63265061378479));
      allPoints.add(new Point2D(-4.1915507316589355, -2.0804848670959473));
      allPoints.add(new Point2D(-5.12109899520874, -3.0893688201904297));
      allPoints.add(new Point2D(-4.859825611114502, -2.785644292831421));
      allPoints.add(new Point2D(-4.775627136230469, -2.696463108062744));
      allPoints.add(new Point2D(-4.358664512634277, -2.2563095092773438));
      allPoints.add(new Point2D(-4.1915507316589355, -2.0804848670959473));
      allPoints.add(new Point2D(-3.4564576148986816, -2.63265061378479));
      allPoints.add(new Point2D(-3.807356834411621, -3.002892017364502));
      allPoints.add(new Point2D(-4.553065299987793, -3.4513211250305176));
      allPoints.add(new Point2D(-5.069811820983887, -3.23018741607666));
      allPoints.add(new Point2D(-5.100488185882568, -3.1833839416503906));
      allPoints.add(new Point2D(-5.298876762390137, -3.542062759399414));
      allPoints.add(new Point2D(-5.2866644859313965, -3.4932525157928467));
      allPoints.add(new Point2D(-5.273212432861328, -3.4448282718658447));
      allPoints.add(new Point2D(-5.232128620147705, -3.3970932960510254));
      allPoints.add(new Point2D(-5.069811820983887, -3.23018741607666));
      allPoints.add(new Point2D(-4.553065299987793, -3.4513211250305176));
      allPoints.add(new Point2D(-4.740345478057861, -3.563941240310669));
      allPoints.add(new Point2D(-5.02747917175293, -3.6477229595184326));
      allPoints.add(new Point2D(-5.06597900390625, -3.929356813430786));
      allPoints.add(new Point2D(-5.018005847930908, -3.799926280975342));
      allPoints.add(new Point2D(-4.883349895477295, -3.6579384803771973));
      allPoints.add(new Point2D(-4.740345478057861, -3.563941240310669));
      allPoints.add(new Point2D(-3.807356834411621, -3.002892017364502));
      allPoints.add(new Point2D(-4.45435094833374, -3.68554949760437));
      allPoints.add(new Point2D(-4.8644490242004395, -4.021878719329834));
      allPoints.add(new Point2D(-4.954554557800293, -4.038153171539307));
      allPoints.add(new Point2D(-5.019192218780518, -4.006241798400879));
      allPoints.add(new Point2D(-4.7572712898254395, -4.187997817993164));
      allPoints.add(new Point2D(-4.7403950691223145, -4.135128974914551));
      allPoints.add(new Point2D(-4.652767658233643, -3.99074387550354));
      allPoints.add(new Point2D(-4.45435094833374, -3.68554949760437));
      allPoints.add(new Point2D(-1.1035929918289185, -0.15009166300296783));
      allPoints.add(new Point2D(-0.1325405091047287, -1.071406364440918));
      allPoints.add(new Point2D(-3.5434775352478027, -4.594754219055176));
      allPoints.add(new Point2D(-3.9303693771362305, -4.854280471801758));
      allPoints.add(new Point2D(-4.214529514312744, -4.682061672210693));
      allPoints.add(new Point2D(-4.299655914306641, -4.628946304321289));
      allPoints.add(new Point2D(-4.521774768829346, -4.443136215209961));
      allPoints.add(new Point2D(-4.712095260620117, -4.276363372802734));
      allPoints.add(new Point2D(-3.843104600906372, -5.036890983581543));
      allPoints.add(new Point2D(-3.5434775352478027, -4.594754219055176));
      allPoints.add(new Point2D(-0.1325405091047287, -1.071406364440918));
      allPoints.add(new Point2D(0.706642746925354, -1.8676061630249023));
      allPoints.add(new Point2D(0.7572318315505981, -1.9582099914550781));
      allPoints.add(new Point2D(0.7535964250564575, -2.016834259033203));
      allPoints.add(new Point2D(0.5440694093704224, -2.24698543548584));
      allPoints.add(new Point2D(0.33469876646995544, -2.475693702697754));
      allPoints.add(new Point2D(-0.049958135932683945, -2.8956198692321777));
      allPoints.add(new Point2D(-0.6318849325180054, -3.4766623973846436));
      allPoints.add(new Point2D(-2.941107749938965, -5.71480131149292));
      allPoints.add(new Point2D(-3.027928113937378, -5.76664400100708));
      allPoints.add(new Point2D(-3.24874210357666, -5.6797003746032715));
      allPoints.add(new Point2D(-3.6829042434692383, -5.272718906402588));
      allPoints.add(new Point2D(-1.1035929918289185, -0.15009166300296783));
      allPoints.add(new Point2D(0.8412987589836121, 1.9020061492919922));
      allPoints.add(new Point2D(2.641785144805908, 0.19371457397937775));
      allPoints.add(new Point2D(2.566567897796631, -0.11148743331432343));
      allPoints.add(new Point2D(2.501136302947998, -0.19033674895763397));
      allPoints.add(new Point2D(2.1685194969177246, -0.5502172112464905));
      allPoints.add(new Point2D(1.8301712274551392, -0.9139905571937561));
      allPoints.add(new Point2D(0.9450846910476685, -1.8256735801696777));
      allPoints.add(new Point2D(0.8717952966690063, -1.8889789581298828));
      allPoints.add(new Point2D(0.706642746925354, -1.8676061630249023));
      allPoints.add(new Point2D(0.8412987589836121, 1.9020061492919922));
      allPoints.add(new Point2D(3.7270257472991943, 4.9467997550964355));
      allPoints.add(new Point2D(5.527553081512451, 3.37583589553833));
      allPoints.add(new Point2D(5.498534679412842, 3.3326869010925293));
      allPoints.add(new Point2D(5.279730319976807, 3.0557045936584473));
      allPoints.add(new Point2D(5.001044750213623, 2.7051587104797363));
      allPoints.add(new Point2D(4.544345378875732, 2.147122859954834));
      allPoints.add(new Point2D(3.889443874359131, 1.3477177619934082));
      allPoints.add(new Point2D(3.3898367881774902, 0.7556318640708923));
      allPoints.add(new Point2D(3.1967740058898926, 0.5337657332420349));
      allPoints.add(new Point2D(3.0523905754089355, 0.3741597533226013));
      allPoints.add(new Point2D(2.9595046043395996, 0.30753177404403687));
      allPoints.add(new Point2D(2.641785144805908, 0.19371457397937775));

      Point2D[] concaveHullVertices = new Point2D[concaveHullSize];

      for (int i = 0; i < concaveHullSize; i++)
      {
         concaveHullVertices[i] = allPoints.remove(0);
      }

      List<ConvexPolygon2D> convexPolygons = new ArrayList<>();

      for (int polygonIndex = 0; polygonIndex < numberOfPolygons; polygonIndex++)
      {
         int convexPolygonSize = polygonSizes.get(polygonIndex);
         ConvexPolygon2D convexPolygon = new ConvexPolygon2D();

         for (int i = 0; i < convexPolygonSize; i++)
         {
            convexPolygon.addVertex(allPoints.remove(0));
         }

         convexPolygon.update();
         convexPolygons.add(convexPolygon);
      }
      PlanarRegion planarRegion = new PlanarRegion(transformToWorld, concaveHullVertices, convexPolygons);
      planarRegion.setRegionId(regionId);

      return planarRegion;
   }

   private static PlanarRegion getAbovePlanarRegion()
   {
      Point3D origin = new Point3D(4.573361396789551, 4.580695152282715, 0.14961576461791992);
      Vector3D normal = new Vector3D(6.801014399479212E-4, 7.282382432538535E-4, 0.999999503565423);
      AxisAngle orientation = EuclidGeometryTools.axisAngleFromZUpToVector3D(normal);

      int regionId = 1442599249;
      int concaveHullSize = 86;
      int numberOfPolygons = 9;
      TIntArrayList polygonSizes = new TIntArrayList();
      polygonSizes.add(8);
      polygonSizes.add(7);
      polygonSizes.add(7);
      polygonSizes.add(5);
      polygonSizes.add(6);
      polygonSizes.add(7);
      polygonSizes.add(6);
      polygonSizes.add(8);
      polygonSizes.add(8);

      RigidBodyTransform transformToWorld = new RigidBodyTransform(orientation, origin);

      List<Point2D> allPoints = new ArrayList<>();
      allPoints.add(new Point2D(-0.8718528747558594, 0.6675099730491638));
      allPoints.add(new Point2D(-0.8644404411315918, 0.7499369382858276));
      allPoints.add(new Point2D(-0.8654263019561768, 0.8129432201385498));
      allPoints.add(new Point2D(-0.8427417874336243, 0.9075947403907776));
      allPoints.add(new Point2D(-0.8635407090187073, 0.9717594385147095));
      allPoints.add(new Point2D(-0.8403199911117554, 1.0210192203521729));
      allPoints.add(new Point2D(-0.7867416739463806, 1.0103293657302856));
      allPoints.add(new Point2D(-0.7221437692642212, 1.0121371746063232));
      allPoints.add(new Point2D(-0.6811802387237549, 0.9223543405532837));
      allPoints.add(new Point2D(-0.6850751042366028, 0.7861550450325012));
      allPoints.add(new Point2D(-0.6841472387313843, 0.7664601802825928));
      allPoints.add(new Point2D(-0.6781496405601501, 0.708976686000824));
      allPoints.add(new Point2D(-0.6786923408508301, 0.6514407396316528));
      allPoints.add(new Point2D(-0.6051254272460938, 0.6131750345230103));
      allPoints.add(new Point2D(-0.47939014434814453, 0.6217984557151794));
      allPoints.add(new Point2D(-0.4264121353626251, 0.6111282110214233));
      allPoints.add(new Point2D(-0.35447928309440613, 0.6205928325653076));
      allPoints.add(new Point2D(-0.27058324217796326, 0.6052060723304749));
      allPoints.add(new Point2D(-0.2703424394130707, 0.5304311513900757));
      allPoints.add(new Point2D(-0.283809095621109, 0.446952760219574));
      allPoints.add(new Point2D(-0.28373104333877563, 0.42658883333206177));
      allPoints.add(new Point2D(-0.2703612446784973, 0.3114682137966156));
      allPoints.add(new Point2D(-0.24042731523513794, 0.22339291870594025));
      allPoints.add(new Point2D(-0.18206900358200073, 0.2114531546831131));
      allPoints.add(new Point2D(-0.16153329610824585, 0.20931336283683777));
      allPoints.add(new Point2D(-0.06777128577232361, 0.20924951136112213));
      allPoints.add(new Point2D(0.021516254171729088, 0.2215886414051056));
      allPoints.add(new Point2D(0.11692632734775543, 0.17157842218875885));
      allPoints.add(new Point2D(0.12880109250545502, 0.08471935242414474));
      allPoints.add(new Point2D(0.11770275235176086, 0.028243662789463997));
      allPoints.add(new Point2D(0.1297806203365326, -0.03110264055430889));
      allPoints.add(new Point2D(0.12924686074256897, -0.10162967443466187));
      allPoints.add(new Point2D(0.17827799916267395, -0.17816203832626343));
      allPoints.add(new Point2D(0.2731885313987732, -0.1771738976240158));
      allPoints.add(new Point2D(0.33439314365386963, -0.1904730349779129));
      allPoints.add(new Point2D(0.416840136051178, -0.1906200349330902));
      allPoints.add(new Point2D(0.5158542990684509, -0.20825161039829254));
      allPoints.add(new Point2D(0.5298648476600647, -0.3783920109272003));
      allPoints.add(new Point2D(0.5161482095718384, -0.43359899520874023));
      allPoints.add(new Point2D(0.5178725719451904, -0.46716299653053284));
      allPoints.add(new Point2D(0.5242461562156677, -0.5092365145683289));
      allPoints.add(new Point2D(0.5523638129234314, -0.5775636434555054));
      allPoints.add(new Point2D(0.6139494180679321, -0.587139368057251));
      allPoints.add(new Point2D(0.651879072189331, -0.5858282446861267));
      allPoints.add(new Point2D(0.7128627300262451, -0.5771002769470215));
      allPoints.add(new Point2D(0.7985747456550598, -0.5949825048446655));
      allPoints.add(new Point2D(0.8728573322296143, -0.5922674536705017));
      allPoints.add(new Point2D(0.925751805305481, -0.6728193759918213));
      allPoints.add(new Point2D(0.9169009923934937, -0.7472851276397705));
      allPoints.add(new Point2D(0.9294601678848267, -0.8428670167922974));
      allPoints.add(new Point2D(0.8999667763710022, -0.9702234864234924));
      allPoints.add(new Point2D(0.7817901968955994, -0.9593963027000427));
      allPoints.add(new Point2D(0.7478936314582825, -0.8366652131080627));
      allPoints.add(new Point2D(0.6973272562026978, -0.7774149775505066));
      allPoints.add(new Point2D(0.6126202940940857, -0.7792789936065674));
      allPoints.add(new Point2D(0.5357426404953003, -0.7661125659942627));
      allPoints.add(new Point2D(0.44805899262428284, -0.7294776439666748));
      allPoints.add(new Point2D(0.38207709789276123, -0.6528151035308838));
      allPoints.add(new Point2D(0.3823855519294739, -0.5664455890655518));
      allPoints.add(new Point2D(0.33285245299339294, -0.3898504972457886));
      allPoints.add(new Point2D(0.3110615313053131, -0.372524619102478));
      allPoints.add(new Point2D(0.2562030553817749, -0.3517467975616455));
      allPoints.add(new Point2D(0.19886411726474762, -0.3132724165916443));
      allPoints.add(new Point2D(0.11507014185190201, -0.3304542005062103));
      allPoints.add(new Point2D(0.053683966398239136, -0.3118037283420563));
      allPoints.add(new Point2D(-0.0255045834928751, -0.34982261061668396));
      allPoints.add(new Point2D(-0.03904683515429497, -0.22856208682060242));
      allPoints.add(new Point2D(0.015701644122600555, -0.171952486038208));
      allPoints.add(new Point2D(-0.043156009167432785, -0.09207247197628021));
      allPoints.add(new Point2D(-0.012148777022957802, -0.013527953997254372));
      allPoints.add(new Point2D(-0.0621374137699604, 0.05154521018266678));
      allPoints.add(new Point2D(-0.12186543643474579, 0.08685895055532455));
      allPoints.add(new Point2D(-0.22495922446250916, 0.0701184794306755));
      allPoints.add(new Point2D(-0.31982946395874023, 0.045322272926568985));
      allPoints.add(new Point2D(-0.3818679749965668, 0.10896191000938416));
      allPoints.add(new Point2D(-0.40199553966522217, 0.1892552226781845));
      allPoints.add(new Point2D(-0.462565541267395, 0.24704861640930176));
      allPoints.add(new Point2D(-0.4409250020980835, 0.3499007225036621));
      allPoints.add(new Point2D(-0.5046027898788452, 0.4738788604736328));
      allPoints.add(new Point2D(-0.5604949593544006, 0.48963239789009094));
      allPoints.add(new Point2D(-0.5852360725402832, 0.4893389940261841));
      allPoints.add(new Point2D(-0.6019317507743835, 0.4880034029483795));
      allPoints.add(new Point2D(-0.6840741634368896, 0.45086634159088135));
      allPoints.add(new Point2D(-0.7212122082710266, 0.5067237019538879));
      allPoints.add(new Point2D(-0.8470950126647949, 0.4517745077610016));
      allPoints.add(new Point2D(-0.8623324632644653, 0.5888731479644775));
      allPoints.add(new Point2D(0.42178812623023987, -0.6989542245864868));
      allPoints.add(new Point2D(0.5523638129234314, -0.5775636434555054));
      allPoints.add(new Point2D(0.7128627300262451, -0.5771002769470215));
      allPoints.add(new Point2D(0.8278228044509888, -0.5879982709884644));
      allPoints.add(new Point2D(0.6973272562026978, -0.7774149775505066));
      allPoints.add(new Point2D(0.6126202940940857, -0.7792789936065674));
      allPoints.add(new Point2D(0.5357426404953003, -0.7661125659942627));
      allPoints.add(new Point2D(0.44805899262428284, -0.7294776439666748));
      allPoints.add(new Point2D(0.6973272562026978, -0.7774149775505066));
      allPoints.add(new Point2D(0.8278228044509888, -0.5879982709884644));
      allPoints.add(new Point2D(0.8728573322296143, -0.5922674536705017));
      allPoints.add(new Point2D(0.925751805305481, -0.6728193759918213));
      allPoints.add(new Point2D(0.9294601678848267, -0.8428670167922974));
      allPoints.add(new Point2D(0.8999667763710022, -0.9702234864234924));
      allPoints.add(new Point2D(0.7817901968955994, -0.9593963027000427));
      allPoints.add(new Point2D(0.0488029345870018, -0.31414714455604553));
      allPoints.add(new Point2D(0.17827799916267395, -0.17816203832626343));
      allPoints.add(new Point2D(0.2731885313987732, -0.1771738976240158));
      allPoints.add(new Point2D(0.416840136051178, -0.1906200349330902));
      allPoints.add(new Point2D(0.5158542990684509, -0.20825161039829254));
      allPoints.add(new Point2D(0.5161760449409485, -0.21215887367725372));
      allPoints.add(new Point2D(0.33285245299339294, -0.3898504972457886));
      allPoints.add(new Point2D(0.33285245299339294, -0.3898504972457886));
      allPoints.add(new Point2D(0.5161760449409485, -0.21215887367725372));
      allPoints.add(new Point2D(0.5523638129234314, -0.5775636434555054));
      allPoints.add(new Point2D(0.42178812623023987, -0.6989542245864868));
      allPoints.add(new Point2D(0.38207709789276123, -0.6528151035308838));
      allPoints.add(new Point2D(-0.37067073583602905, 0.09747570008039474));
      allPoints.add(new Point2D(-0.24042731523513794, 0.22339291870594025));
      allPoints.add(new Point2D(0.021516254171729088, 0.2215886414051056));
      allPoints.add(new Point2D(0.10292394459247589, 0.17891791462898254));
      allPoints.add(new Point2D(-0.0621374137699604, 0.05154521018266678));
      allPoints.add(new Point2D(-0.31982946395874023, 0.045322272926568985));
      allPoints.add(new Point2D(-0.0621374137699604, 0.05154521018266678));
      allPoints.add(new Point2D(0.10292394459247589, 0.17891791462898254));
      allPoints.add(new Point2D(0.11692632734775543, 0.17157842218875885));
      allPoints.add(new Point2D(0.17827799916267395, -0.17816203832626343));
      allPoints.add(new Point2D(0.0488029345870018, -0.31414714455604553));
      allPoints.add(new Point2D(-0.0255045834928751, -0.34982261061668396));
      allPoints.add(new Point2D(-0.03904683515429497, -0.22856208682060242));
      allPoints.add(new Point2D(-0.8483608365058899, 0.46316415071487427));
      allPoints.add(new Point2D(-0.6786923408508301, 0.6514407396316528));
      allPoints.add(new Point2D(-0.39278659224510193, 0.6242376565933228));
      allPoints.add(new Point2D(-0.5046027898788452, 0.4738788604736328));
      allPoints.add(new Point2D(-0.6840741634368896, 0.45086634159088135));
      allPoints.add(new Point2D(-0.8470950126647949, 0.4517745077610016));
      allPoints.add(new Point2D(-0.5046027898788452, 0.4738788604736328));
      allPoints.add(new Point2D(-0.39278659224510193, 0.6242376565933228));
      allPoints.add(new Point2D(-0.35447928309440613, 0.6205928325653076));
      allPoints.add(new Point2D(-0.27058324217796326, 0.6052060723304749));
      allPoints.add(new Point2D(-0.24042731523513794, 0.22339291870594025));
      allPoints.add(new Point2D(-0.37067073583602905, 0.09747570008039474));
      allPoints.add(new Point2D(-0.3818679749965668, 0.10896191000938416));
      allPoints.add(new Point2D(-0.462565541267395, 0.24704861640930176));
      allPoints.add(new Point2D(-0.8718528747558594, 0.6675099730491638));
      allPoints.add(new Point2D(-0.8635407090187073, 0.9717594385147095));
      allPoints.add(new Point2D(-0.8403199911117554, 1.0210192203521729));
      allPoints.add(new Point2D(-0.7221437692642212, 1.0121371746063232));
      allPoints.add(new Point2D(-0.6811802387237549, 0.9223543405532837));
      allPoints.add(new Point2D(-0.6781496405601501, 0.708976686000824));
      allPoints.add(new Point2D(-0.6786923408508301, 0.6514407396316528));
      allPoints.add(new Point2D(-0.8483608365058899, 0.46316415071487427));

      Point2D[] concaveHullVertices = new Point2D[concaveHullSize];

      for (int i = 0; i < concaveHullSize; i++)
      {
         concaveHullVertices[i] = allPoints.remove(0);
      }

      List<ConvexPolygon2D> convexPolygons = new ArrayList<>();

      for (int polygonIndex = 0; polygonIndex < numberOfPolygons; polygonIndex++)
      {
         int convexPolygonSize = polygonSizes.get(polygonIndex);
         ConvexPolygon2D convexPolygon = new ConvexPolygon2D();

         for (int i = 0; i < convexPolygonSize; i++)
         {
            convexPolygon.addVertex(allPoints.remove(0));
         }

         convexPolygon.update();
         convexPolygons.add(convexPolygon);
      }
      PlanarRegion planarRegion = new PlanarRegion(transformToWorld, concaveHullVertices, convexPolygons);
      planarRegion.setRegionId(regionId);

      return planarRegion;
   }

}
